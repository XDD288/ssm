<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--开启包扫描-->
    <context:component-scan base-package="cn.xdd.dao;cn.xdd.service;cn.xdd.aop"/>
    <!--开启aop代理-->
    <aop:aspectj-autoproxy/>

    <!--使用spring数据源-->
   <!-- <bean id="dataSource1" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/xdd"/>
        <property name="username" value="root"/>
        <property name="password" value="0320520liuxiao"/>
    </bean>-->

    <!--使用c3p0数据源-->
    <context:property-placeholder location="classpath:*.properties"/>
    <bean id="dataSource2" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/xdd"/>
        <property name="user" value="root"/>
        <property name="password" value="root"/>
        <property name="maxPoolSize" value="15"/>
        <property name="initialPoolSize" value="5"/>
    </bean>

    <!--配置sqlSessionFactory，相当于配置mybatis核心配置文件-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
        <property name="dataSource" ref="dataSource2"/>
        <property name="mapperLocations" value="classpath:cn/xdd/dao/*.xml"/>
    </bean>

    <!--扫描dao层并为生成相应的实现类-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.xdd.dao"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>
   <!-- <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>-->


    <!--配置spring事务-->
    <!--1.配置事务管理bean-->
    <bean id="transaction" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource2"/>
    </bean>
    <!--2.配置事务通知，首先会检查匹配的方法是否开启了事务，
            如果已经存在事务，则不做任何处理；如果没有事务，则为其开启一个事务
     -->
    <tx:advice id="serviceInterceptor" transaction-manager="transaction">
        <tx:attributes>
            <tx:method name="set*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="get*" read-only="true"/>  <!--get开头的方法设置为只读-->
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <!--3.aop配置-->
    <aop:config>
        <aop:pointcut id="serviceTransaction" expression="execution(* cn.xdd.service.impl.*.*(..))"/>
        <aop:advisor advice-ref="serviceInterceptor" pointcut-ref="serviceTransaction"/>
    </aop:config>
</beans>